<?phpApp::uses('AppController', 'Controller');App::import('Vendor', 'mPDF', array('file' => 'mPDF'.DS.'mPDF.php'));App::import('Controller', 'CourseMappings');App::import('Controller', 'ContinuousAssessmentExams');/** * Attendances Controller * * @property Attendance $Attendance * @property PaginatorComponent $Paginator * @property FlashComponent $Flash * @property SessionComponent $Session */class AttendancesController extends AppController {/** * Components * * @var array */	public $components = array('Paginator', 'Flash', 'Session','mPDF');	public $uses = array("Attendance", "Batch", "Program", "MonthYear", "CourseMapping","Student","CourseStudentMapping","GrossAttendance","CourseType","Cae");/** * index method * * @return void */	public function index($type = null) {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {			if (!$type) {				throw new NotFoundException(__('Please select attendance Course or Gross?'));			}			$this->set('type', $type); // For Type parameter ("Gross or Course")				$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));			$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));			$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));			$monthyears = $this->MonthYear->getAllMonthYears();			$this->set(compact('academics','programs','batches','monthyears'));			$results = $this->Attendance->find('all');				$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}	public function search_list() {		$cType = explode(",", $_REQUEST['courseTypeId']);				$results =$this->CourseMapping->find('all',array('conditions' => array(				'CourseMapping.program_id'=> $_REQUEST['Program'],				'CourseMapping.batch_id'=> $_REQUEST['Batch'],				'CourseMapping.month_year_id'=> $_REQUEST['MonthYears'],				'CourseMapping.indicator'=> 0				),'recursive'=>0));		//$this->set('course_type_id', $_REQUEST['courseTypeId']);		$this->set('course_type_id', $cType);		$this->set('type', $_REQUEST['type']);		$this->set('MonthYears', $_REQUEST['MonthYears']);				$this->set('txtMonthYears', $_REQUEST['txtMonthYears']);			$this->set('courseMappings', $results);		$this->set('foilCards', $_REQUEST['foilCards']);//pr($results);		$this->layout=false;		}		public function attendance_entry($typeMode = null, $type = null,$courseMappingId = null,$course_mode_id = null,$program_id = null,$batch_id = null,$MonthYears = null, $txtMonthYears = null,$print = null,$CAE = null) {				if($this->request->is('post')) { 		if(isset($this->request->data['submit'])){			for($i=1; $i<=$this->request->data['maxRow'];$i++) {								$data = array();				$data['Attendance']['student_id']		= $this->request->data['student_id'.$i];				$data['Attendance']['month_year_id'] 	= $this->request->data['month_year_id'.$i];				$data['Attendance']['course_mapping_id']= $this->request->data['course_mapping_id'.$i];				$data['Attendance']['percentage'] 		= $this->request->data['percentage'.$i];								if($this->request->data['typeMode'] == 'Add'){ //Attendance record Add										$data['Attendance']['created_by'] = $this->Auth->user('id');					$this->Attendance->create();									$this->Flash->success(__('The Attendance has been saved.'));				}else if($this->request->data['typeMode'] == 'Edit'){	//Attendance record Edit						$data['Attendance']['modified_by'] 		= $this->Auth->user('id');					$data['Attendance']['id'] 				= $this->request->data['attendance'.$i];					$this->Flash->success(__('The Attendance has been updated.'));				}				$this->Attendance->save($data);			}	 				return $this->redirect(array('action' => 'index','C'));		}}				//if(isset($this->request->data['PRINT']) || ($print)) { 		$results =$this->CourseStudentMapping->find('all', array(				'fields'=>array('CourseStudentMapping.student_id'),				'conditions'=>array('CourseStudentMapping.indicator'=>0,						'CourseStudentMapping.course_mapping_id'=>$courseMappingId),				'contain'=>array(						'Student' => array(								'fields' => array('Student.name,Student.user_initial,Student.registration_number'),								'conditions' => array('Student.program_id'=> $program_id, 'Student.batch_id'=> $batch_id,										'Student.discontinued_status'=> 0								),								'order'=>array('Student.registration_number')						)				)		));		//pr($results);		$this->set('courseMappingId', $courseMappingId);		$course_type_id_array = $this->getCourseTypeIdFromCmId($courseMappingId);		//pr($course_type_id_array);		$course_type_id = $course_type_id_array[0]['Course']['course_type_id'];		//}		/* else{			$results =$this->CourseStudentMapping->find('all', array(				'fields'=>array('CourseStudentMapping.student_id'),				'conditions'=>array('CourseStudentMapping.indicator'=>0, 						'CourseStudentMapping.course_mapping_id'=>$courseMappingId),				'contain'=>array(					'Student' => array(						'fields' => array('Student.name,Student.user_initial,Student.registration_number'),						'conditions' => array('Student.program_id'=> $program_id, 'Student.batch_id'=> $batch_id,									'Student.discontinued_status'=> 0						),					)				)			));			$this->set('courseMappingId', $courseMappingId);		} */		$batch = $this->Attendance->Student->Batch->find('first', array(								'conditions' => array('Batch.id' => $batch_id), 'recursive' => 0));				$txtBatch = $batch['Batch']['batch_period'];						$AttendancePrgId = $this->Attendance->Student->Program->find('first', array(								'conditions' => array('Program.id' => $program_id), 'recursive' => 0));					$objCourseM = new CourseMappingsController();		$getCourse = $objCourseM->getCourseInfo($courseMappingId);				$txtProgram = $AttendancePrgId['Program']['program_name'];				$txtAcademic = $AttendancePrgId['Academic']['short_code'];		$shortCode = $AttendancePrgId['Program']['short_code'];		$this->set('typeMode', $typeMode);		$this->set('type', $type);		$this->set('MonthYears', $MonthYears);		$this->set('txtBatch', $txtBatch);		$this->set('txtAcademic', $txtAcademic);		$this->set('txtProgram', $txtProgram);		$this->set('txtMonthYears', $txtMonthYears);		$this->set('shortCode', $shortCode);		$this->set('Students', $results);				SWITCH ($course_type_id) {			case 1:			case 3:				$assessment_type = "CAE";				$cae_value = $CAE;				$this->set('CAE', $CAE);				break;			case 2:			case 6:				$cae_value = '';				if ($CAE == "CAE") {					$assessment_type = "CAE";				}				else if ($CAE == "ESE") {					$assessment_type = "ESE";				}				$this->set('CAE', '');				break;			case 4:				$cae_value = '';				if ($CAE == "CAE1") {					$assessment_type = "CAE";					$cae_value = 1;				}				else if ($CAE == "CAE2") {					$assessment_type = "CAE";					$cae_value = 2;				}				else if ($CAE == "CAE3") {					$assessment_type = "CAE";					$cae_value = 3;				}				else if ($CAE == "ESE") {					$assessment_type = "ESE";				}				$this->set('CAE', '');				break;			case 5:				$assessment_type = "CAE";				$cae_value = '';				$this->set('CAE', $CAE);				break;		}		//if (is_numeric($CAE)) $this->set('CAE', $CAE);		//else $this->set('CAE', '');				$this->set('course_mode_id', $course_mode_id);		$this->set('program_id', $program_id);		$this->set('batch_id', $batch_id);				if($this->request->is('post') || ($print)) { 		if(isset($this->request->data['PRINT']) || ($print)){			$bodyHtml = "";			$footerHtml="";			if($print == 'F' && $assessment_type=='CAE'){				echo "CAE";			}			if($print == 'F' && $assessment_type=='ESE'){				$headerHtmlBegin ='<table border="0" cellpadding="0" cellspacing="0" style="background-color:#ffffff;"><tr><td style="top:0;" border="0" cellpadding="0" cellspacing="0" valign="top">';				$headerHtml = '<table border="1" cellpadding="0" cellspacing="0" style="font:12px Arial;top:0;width:100%;background-color:#ffffff;">									<tr>									<td rowspan="2" align="right"><img src="../webroot/img/user.jpg"></td>										<td colspan="3" align="left">&nbsp;&nbsp;SATHYABAMA UNIVERSITY<br/>										<span class="slogan"></span></td>									</tr>						<tr><td colspan="4" align="left">&nbsp;&nbsp;FOIL CARD - '.$assessment_type." ".$cae_value.'</td></tr>						<tr>							<td style="height:33px;"><b>&nbsp;M&Y of Exam</b></td>							<td>&nbsp;'.$txtMonthYears.'</td>							<td><b>&nbsp;Course </b></td>							<td>&nbsp;'.$txtAcademic.'</td>						</tr>						<tr>							<td style="height:33px;"><b>&nbsp;Branch</b></td>							<td>&nbsp;'.$shortCode.'</td>							<td><b>&nbsp;Course Code<b></td>							<td>&nbsp;'.$getCourse['Course']['course_code'].'</td>						</tr>						<tr>							<td style="height:33px;"><b>&nbsp;Batch</b></td>							<td>&nbsp;'.$txtBatch.'</td>							<td><b>&nbsp;Course Name</b></td>							<td>&nbsp;'.$getCourse['Course']['course_name'].'</td>						</tr>						<tr style="height:50px;">							<td align="center"><b>S.No.</b></td>							<td colspan="2" align="center"><b>Reg No.&nbsp;&nbsp;</b></td>							<td align="center"><b>Mark</b></td>						</tr>';				$footerHtml ='					<tr>					<td style="text-align:left;height:60px;border-right:none;" valign="top">Date</td>					<td colspan="3" style="text-align:right;height:60px;border-left:none;" valign="top">Name and Signature of Examiner</td>					</tr>					</table>';				$sno =1;$cnt = 1;				$bodyHtml .=$headerHtmlBegin.$headerHtml;				$pageNo = 1;				foreach($results as $student){					if (isset($student['Student']['id'])) {						$bodyHtml .='<tr class="gradeX">								<td align="center" valign="top">'.$cnt.'</td>								<td colspan="2" align="center" style="height:30px;">'.$student['Student']['registration_number'].'</td>								<td align="center"></td>								</tr>';						$sno++;$cnt++;												if($sno == 51){$sno =1;							$bodyHtml .=$footerHtml."									<table class='attendanceHeadTblP' style='height:40px;width:100%;background-color:#ffffff;font:10px Arial;'><tr><td style='text-align:right'><strong>Page : ".$pageNo++."</strong></td></tr></table>									</td></tr></table><div style='page-break-after:always'></div>".$headerHtmlBegin.$headerHtml;						}						if($sno == 26){							$bodyHtml .=$footerHtml."									</td><td style='padding-left:15px;vertical-align:top;'>".$headerHtml;						}					}				}				$bodyHtml .=$footerHtml."<table class='attendanceHeadTblP' style='height:40px;width:100%;background-color:#ffffff;font:10px Arial;'><tr><td style='text-align:right'><strong>Page : ".$pageNo++."</strong></td></tr></table></td></tr></table>";							$PdfFileName = "Foil_Card_".$getCourse['Course']['course_code']."_".$txtAcademic."_".$shortCode;				$this->layout=false;				$this->autoRender = false;				$this->mPDF->init();				$this->mPDF->setFilename($PdfFileName.'.pdf');				$this->mPDF->setOutput('D');				$this->mPDF->WriteHTML($bodyHtml);				$this->mPDF->SetWatermarkText("Draft");								return false;							}else if($print == 'P'){				$headerHtml = '<table border="0" align="center" cellpadding="0" cellspacing="0" style="font:14px Arial;width:100%;background-color:#ffffff;">									<tr>									<td rowspan="2" align="right" width="35%"><img src="../webroot/img/user.jpg"></td>										<td align="left" width="65%">&nbsp;&nbsp;SATHYABAMA UNIVERSITY<br/>										<span class="slogan"></span></td>									</tr>									</table>					<table border="1" cellpadding="0" cellspacing="0" style="width:100%;background-color:#ffffff;font:12px Arial;">						<tr><td style="height:30px;" colspan="4" align="center">&nbsp;&nbsp;ATTENDANCE SHEET - '.$assessment_type." ".$cae_value.'</td></tr>						<tr>							<td style="height:30px;"><b>&nbsp;M&Y of Exam</b></td>							<td>&nbsp;'.$txtMonthYears.'</td>							<td><b>&nbsp;Course </b></td>							<td>&nbsp;'.$txtAcademic.'</td>						</tr>						<tr>							<td style="height:30px;"><b>&nbsp;Branch</b></td>							<td>&nbsp;'.$shortCode.'</td>							<td><b>&nbsp;Course Code<b></td>							<td>&nbsp;'.$getCourse['Course']['course_code'].'</td>						</tr>						<tr>							<td style="height:30px;"><b>&nbsp;Batch</b></td>							<td>&nbsp;'.$txtBatch.'</td>							<td><b>&nbsp;Course Name</b></td>							<td>&nbsp;'.$getCourse['Course']['course_name'].'</td>						</tr>					</table>					<table cellpadding="0" cellspacing="0" border="1" style="border-top:none;width:100%;background-color:#ffffff;font:12px Arial;">						<thead>						<tr style="height:50px;">						<th><b>S.No.</b></th>						<th><b>Reg No.&nbsp;&nbsp;</b></th>						<th style="width:350px;"><b>Student Name</b></th>						<th><b>Answer<br/>Sheet No.</b></th>						<th style="width:150px;"><b>Signature</b></th>						</tr>						</thead>					<tbody>';		$footerHtml ='</tbody>					</table>					<table class="attendanceHeadTblP" style="height:40px;width:100%;background-color:#ffffff;font:12px Arial;">					<tr>					<td style="text-align:left;width:50%;">Date</td>				    <td style="text-align:right;width:50%;">Name and Signature of Invigilator</td>					</tr>										</table>';		//<tr><td colspan="2" style="height:35px;"></td></tr>				$sno =1; 				$pageAllot = 1;				$bodyHtml .=$headerHtml;				$pageNo = 1;				foreach($results as $key => $student){ //pr($student);					if (isset($student['Student']['id'])) {						if($pageAllot == 26){							$bodyHtml .=$footerHtml."									<table class='attendanceHeadTblP' style='height:40px;width:100%;background-color:#ffffff;font:10px Arial;'><tr><td style='text-align:center'><strong>Page : ".$pageNo++."</strong></td></tr></table>									<div style='page-break-after:always'></div>".$headerHtml;													$pageAllot = 1;		  				}						$bodyHtml .='<tr class="gradeX">								<td align="center" style="height:30px;">'.$sno.'</td>								<td align="center">'.$student['Student']['registration_number'].'</td>								<td align="left">&nbsp;'.$student['Student']['name'].'</td>								<td align="center"></td>								<td align="center"></td>								</tr>';						$sno++;$pageAllot++; 					}				}				$bodyHtml .=$footerHtml."<table class='attendanceHeadTblP' style='height:40px;width:100%;background-color:#ffffff;font:10px Arial;'><tr><td style='text-align:center'><strong>Page : ".$pageNo++."</strong></td></tr></table>";				$this->layout = false; 				$this->autoRender = false;				$PdfFileName = "AttendanceSheet_".$getCourse['Course']['course_code']."_".$txtAcademic."_".$shortCode;				$this->mPDF->init();				$this->mPDF->setFilename($PdfFileName.'.pdf');				$this->mPDF->setOutput('D');				$this->mPDF->WriteHTML($bodyHtml);				$this->mPDF->SetWatermarkText("Draft");								return false;							}		}}		}	public function gross_attendance($batch_id = null,$AcademicId = null,$program_id = null,$MonthYears = null, $txtMonthYears = null,$print = null) {		if($this->request->is('post')) {		if(isset($this->request->data['submit'])){			$bodyHtml = "";$footerHtml="";			for($i=1; $i<=$this->request->data['maxRow'];$i++) {				$data = array();				$data['GrossAttendance']['student_id']		= $this->request->data['student_id'.$i];							$data['GrossAttendance']['month_year_id'] 	= $this->request->data['month_year_id'.$i];							$data['GrossAttendance']['program_id'] 		= $this->request->data['program_id'.$i];							$data['GrossAttendance']['percentage'] 		= $this->request->data['percentage'.$i];								if($this->request->data['typeMode'] == 'Add'){ //Attendance record Add								$data['GrossAttendance']['created_by'] 		= $this->Auth->user('id');								$this->GrossAttendance->create();										$this->Flash->success(__('The Gross Attendance has been saved.'));				}else if($this->request->data['typeMode'] == 'Edit'){	//Attendance record Edit								$data['GrossAttendance']['modified_by'] 	= $this->Auth->user('id');								$data['GrossAttendance']['id'] 				= $this->request->data['attendance'.$i];					$this->Flash->success(__('The Gross Attendance has been updated.'));							}				$this->GrossAttendance->save($data);						}			return $this->redirect(array('action' => 'index','G'));		}}		$results =$this->Student->find('all',				array('list' => array('Student.id,Student.name,Student.user_initial,Student.registration_number'),						'conditions' => array(						'Student.program_id'=> $program_id,						'Student.discontinued_status'=> 0,						'Student.batch_id'=> $batch_id						),						'contain'=>array(								'GrossAttendance'=>array('fields'=>array('GrossAttendance.id','GrossAttendance.percentage'),										'conditions' => array('GrossAttendance.month_year_id' => $MonthYears)										
								)						),						'recursive'=>1));				$batch = $this->Attendance->Student->Batch->find('first', array(								'conditions' => array('Batch.id' => $batch_id), 'recursive' => 0));				$txtBatch = $batch['Batch']['batch_period'];				$AttendancePrgId = $this->Attendance->Student->Program->find('first', array(								'conditions' => array('Program.id' => $program_id), 'recursive' => 0));									$txtProgram = $AttendancePrgId['Program']['program_name'];				$txtAcademic = $AttendancePrgId['Academic']['short_code'];		$shortCode = $AttendancePrgId['Program']['short_code'];		$this->set('MonthYears', $MonthYears);		$this->set('txtBatch', $txtBatch);		$this->set('txtAcademic', $txtAcademic);		$this->set('txtProgram', $txtProgram);		$this->set('txtMonthYears', $txtMonthYears);		$this->set('shortCode', $shortCode);		$this->set('Students', $results);				$this->set('batch_id', $batch_id);		$this->set('AcademicId', $AcademicId);		$this->set('program_id', $program_id);				if($this->request->is('post') || ($print)) {		if(isset($this->request->data['PRINT']) || ($print)){			$bodyHtml = "";$footerHtml="";			if($print == 'F'){				$headerHtmlBegin ='<table border="0" style="background-color:#ffffff;" cellpadding="0" cellspacing="0"><tr><td style="top:0;" border="0" cellpadding="0" cellspacing="0">';				$headerHtml = '<table border="1" cellpadding="0" cellspacing="0" style="font:12px Arial;top:0;width:100%;background-color:#ffffff;">									<tr>									<td rowspan="2" align="right"><img src="../webroot/img/user.jpg"></td>										<td colspan="3" align="left">SATHYABAMA UNIVERSITY<br/>										<span class="slogan"></span></td>									</tr>						<tr><td colspan="4" align="left">CAE FOIL CARD</td></tr>						<tr>							<td style="height:33px;"><b>&nbsp;M&Y of Exam</b></td>							<td>&nbsp;'.$txtMonthYears.'</td>							<td><b>&nbsp;Course </b></td>							<td>&nbsp;'.$txtAcademic.'</td>						</tr>						<tr>							<td style="height:33px;"><b>&nbsp;Branch</b></td>							<td>&nbsp;'.$shortCode.'</td>							<td style="height:33px;"><b>&nbsp;Batch</b></td>							<td>&nbsp;'.$txtBatch.'</td>						</tr>						<tr style="height:50px;">							<td align="center"><b>S.No.</b></td>							<td colspan="2" align="center"><b>Reg No.&nbsp;&nbsp;</b></td>							<td align="center"><b>Mark</b></td>						</tr>';				$footerHtml ='					<tr>					<td colspan="4" style="text-align:left;height:25px;">Name and Signature of Examiner</td>					</tr>					</table>';				$sno =1;$cnt = 1;				$bodyHtml .=$headerHtmlBegin.$headerHtml;				foreach($results as $student){					$bodyHtml .='<tr class="gradeX">							<td align="center">'.$cnt.'</td>							<td colspan="2" align="center" style="height:30px;">'.$student['Student']['registration_number'].'</td>							<td align="center"></td>							</tr>';					$sno++;$cnt++;											if($sno == 51){$sno =1;					$bodyHtml .=$footerHtml."</td></tr></table><div style='page-break-after:always'></div>".$headerHtmlBegin.$headerHtml;					}					if($sno == 26){						$bodyHtml .=$footerHtml."</td><td style='padding-left:15px;'>".$headerHtml;					}				}				$bodyHtml .=$footerHtml."</td></tr></table>";				$PdfFileName = "Foil_Card";				$this->mPDF->init();				$this->mPDF->setFilename($PdfFileName."_".date('d_M_Y').'.pdf');				$this->mPDF->setOutput('D');				$this->mPDF->WriteHTML($bodyHtml);				$this->mPDF->SetWatermarkText("Draft");				return false;						}else if($print == 'P'){				$headerHtml = '<table border="0" align="center" cellpadding="0" cellspacing="0" style="font:14px Arial;width:100%;background-color:#ffffff;">									<tr>									<td rowspan="2" align="right" width="35%"><img src="../webroot/img/user.jpg"></td>										<td align="left" width="65%">SATHYABAMA UNIVERSITY<br/>										<span class="slogan"></span></td>									</tr>									</table>					<table border="1" cellpadding="0" cellspacing="0" style="width:100%;background-color:#ffffff;">						<tr><td colspan="4" align="center">ATTENDANCE SHEET</td></tr>						<tr>							<td style="height:33px;"><b>&nbsp;M&Y of Exam</b></td>							<td>&nbsp;'.$txtMonthYears.'</td>							<td><b>&nbsp;Course </b></td>							<td>&nbsp;'.$txtAcademic.'</td>						</tr>						<tr>							<td style="height:33px;"><b>&nbsp;Branch</b></td>							<td>&nbsp;'.$shortCode.'</td>							<td style="height:33px;"><b>&nbsp;Batch</b></td>							<td>&nbsp;'.$txtBatch.'</td>						</tr>					</table>					<table cellpadding="0" cellspacing="0" border="1" style="margin-top:10px;width:100%;background-color:#ffffff;">						<thead>						<tr style="height:50px;">						<th><b>S.No.</b></th>						<th><b>Reg No.&nbsp;&nbsp;</b></th>						<th><b>Student Name</b></th>						<th style="width:200px;"><b>Signature</b></th>						</tr>						</thead>					<tbody>';				$footerHtml ='</tbody>					</table>					<table class="attendanceHeadTblP" style="height:60px;background-color:#ffffff;">					<tr>					<td style="text-align:right;">Name and Signature of Invigilator</td>					</tr>					<tr><td colspan="2" style="height:45px;"></td></tr>					</table>';				$sno =1;				$bodyHtml .=$headerHtml;				foreach($results as $student){					$bodyHtml .='<tr class="gradeX">							<td align="center" style="height:27px;">'.$sno.'</td>							<td align="center">'.$student['Student']['registration_number'].'</td>							<td align="left">&nbsp;'.$student['Student']['name'].".".$student['Student']['user_initial'].'</td>							<td align="center"></td>							</tr>';					$sno++;					if($sno% 26 == 0){						$bodyHtml .=$footerHtml."<div style='page-break-after:always'></div>".$headerHtml;					}				}				$bodyHtml .=$footerHtml;				$this->layout=false;				$this->autoRender=false;				$PdfFileName = "Attendance_Sheet";				$this->mPDF->init();				$this->mPDF->setFilename($PdfFileName."_".date('d_M_Y').'.pdf');				$this->mPDF->setOutput('D');				$this->mPDF->WriteHTML($bodyHtml);				$this->mPDF->SetWatermarkText("Draft");							return false;			}		}}	}	/**  * view method * * @throws NotFoundException * @param string $id * @return void */	public function view($id = null) {		if (!$this->Attendance->exists($id)) {			throw new NotFoundException(__('Invalid attendance'));		}		$options = array('conditions' => array('Attendance.' . $this->Attendance->primaryKey => $id));		$this->set('attendance', $this->Attendance->find('first', $options));	}/** * add method * * @return void */	public function add() {		if ($this->request->is('post')) {			$this->Attendance->create();			if ($this->Attendance->save($this->request->data)) {				$this->Flash->success(__('The attendance has been saved.'));				return $this->redirect(array('action' => 'index'));			} else {				$this->Flash->error(__('The attendance could not be saved. Please, try again.'));			}		}		$students = $this->Attendance->Student->find('list');		$batches = $this->Attendance->Batch->find('list');		$monthYears = $this->Attendance->MonthYear->find('list');		$programs = $this->Attendance->Program->find('list');		$courses = $this->Attendance->Course->find('list');		$this->set(compact('students', 'batches', 'monthYears', 'programs', 'courses')); 	}/** * edit method * * @throws NotFoundException * @param string $id * @return void */	public function edit($id = null) {		if (!$this->Attendance->exists($id)) {			throw new NotFoundException(__('Invalid attendance'));		}		if ($this->request->is(array('post', 'put'))) {			if ($this->Attendance->save($this->request->data)) {				$this->Flash->success(__('The attendance has been saved.'));				return $this->redirect(array('action' => 'index'));			} else {				$this->Flash->error(__('The attendance could not be saved. Please, try again.'));			}		} else {			$options = array('conditions' => array('Attendance.' . $this->Attendance->primaryKey => $id));			$this->request->data = $this->Attendance->find('first', $options);		}		$students = $this->Attendance->Student->find('list');		$batches = $this->Attendance->Batch->find('list');		$monthYears = $this->Attendance->MonthYear->find('list');		$programs = $this->Attendance->Program->find('list');		$courses = $this->Attendance->Course->find('list');		$this->set(compact('students', 'batches', 'monthYears', 'programs', 'courses'));	}/** * delete method * * @throws NotFoundException * @param string $id * @return void */	public function delete($id = null) {		$this->Attendance->id = $id;		if (!$this->Attendance->exists()) {			throw new NotFoundException(__('Invalid attendance'));		}		$this->request->allowMethod('post', 'delete');		if ($this->Attendance->delete()) {			$this->Flash->success(__('The attendance has been deleted.'));		} else {			$this->Flash->error(__('The attendance could not be deleted. Please, try again.'));		}		return $this->redirect(array('action' => 'index'));	}		public function attendance_foil_cards($type = null) {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {			$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));			$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));			$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));			$monthyears = $this->MonthYear->getAllMonthYears();  			$this->set(compact('academics','programs','batches','monthyears'));			$results = $this->Attendance->find('all');				$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}		public function caeMarkPrint($course_type) {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {		if($this->request->is('post')) {						$ContinuousAssessmentExamsController = new ContinuousAssessmentExamsController;			$courseType = $this->listCourseTypeIdsBasedOnMethod($course_type, "-");						$courseTypeIdArray = explode("-",$courseType);			//pr($courseTypeIdArray);						$month_year_id = $this->request->data['monthYears'];			$batch_id = $this->request->data['Mark']['batch_id'];			$program_id = $this->request->data['Student']['program_id'];			$seqCAE = $this->request->data['Mark']['CAE'];						$cmaCond = array();			$cmaCond['CourseMapping.batch_id'] = $batch_id;			$cmaCond['CourseMapping.indicator'] = 0;			$cmaCond['CourseMapping.month_year_id <='] = $month_year_id;						if ($program_id!='-') $cmaCond['CourseMapping.program_id'] = $program_id;							$course_mapping_array = $this->CourseMapping->find('list', array(					'conditions'=>array( $cmaCond )			));						$courseMappingArray = $this->theoryCourseMappingArray($batch_id, $courseTypeIdArray, $program_id, $month_year_id, $course_mapping_array);			//echo count($courseMappingArray);			//pr($courseMappingArray);						$CourseList = "";						$studentsArray = $this->Student->getStudentsWithBatchAndProgram($batch_id, $program_id, $month_year_id);			//pr($studentsArray);			SWITCH ($course_type) {				case "theory":					$model = "Cae";					$internal_model = "ContinuousAssessmentExam";					$internal_field = "cae_id";					break;				case "practical":				case "studio":					$model = "CaePractical";					$internal_model = "InternalPractical";					$internal_field = "cae_practical_id";					break;				case "project":					$model = "CaeProject";					$internal_model = "ProjectReview";					$internal_field = "cae_project_id";					break;			}			$courseMappingDetails = $this->CourseMapping->find('all', array(				'conditions' => array(					'CourseMapping.id' => array_keys($courseMappingArray),				),				'contain'=>array(					$model=>array(						'conditions'=>array("$model".".indicator"=>0, "$model".".month_year_id"=>$month_year_id),						'fields'=>array("$model".".course_mapping_id","$model".".marks","$model".".assessment_type",								"$model".".marks_status", "$model".".approval_status","$model".".lecturer_id",								"$model".".add_status","$model".".id"						)					),					'Course'=>array(						'fields'=>array('Course.id', 'Course.course_name', 'Course.course_type_id', 'Course.course_code', 'Course.common_code')					)				),			));						$getAllCaeId = array();$getAllCMId = array();			foreach ($courseMappingDetails as $key => $courseMapping) {				if (isset($courseMapping[$model])) {					$caeArray = $courseMapping[$model];					$i=1;					foreach ($caeArray as $key => $cae) {						if ($course_type == "theory" || $course_type == "project") {							if($seqCAE == $i){								$getAllCaeId[$courseMapping['CourseMapping']['id']] = array(										'cae_id' => $cae['id'],										'course_code' => $courseMapping['Course']['course_code']								);							}						}						else {							$getAllCaeId[$courseMapping['CourseMapping']['id']] = array(									'cae_id' => $cae['id'],									'course_code' => $courseMapping['Course']['course_code']							);						}						$i++;					}				}			}						$batch_period = $this->Batch->getBatch($batch_id);			$program_details = $this->Program->getProgram($program_id);			$full_monthyear = $this->MonthYear->getMonthYear($month_year_id);						if($getAllCaeId){				$markArray = array();				foreach($getAllCaeId as $cm_id => $cae_details) {					$results = $this->CourseStudentMapping->find('all', array(						'conditions' => array(							'CourseStudentMapping.indicator'=>0, 'CourseStudentMapping.course_mapping_id '=>$cm_id						),						'fields' => array('CourseStudentMapping.student_id'),						'group'=>'CourseStudentMapping.student_id ASC',						'contain' => array(							'Student' => array(								'conditions' => array('Student.discontinued_status'=>0),								$internal_model => array(									'conditions' => array("$internal_model"."."."$internal_field" => $cae_details['cae_id']),									'fields'=>array("$internal_model".".".'marks'),								)							)						),					));										foreach ($results as $key => $caeMarkArray) { 						if (isset($caeMarkArray['Student'][$internal_model][0]['marks'])) {							$markArray[$caeMarkArray['CourseStudentMapping']['student_id']][$cm_id] = $caeMarkArray['Student'][$internal_model][0]['marks'];						}						else {							$markArray[$caeMarkArray['CourseStudentMapping']['student_id']][$cm_id] = 'NA';						}					}				}				//pr($markArray);								if ($this->data['submit']=="print") { 					//echo "print";									$html ="";					$ContinuousAssessmentExam = new ContinuousAssessmentExamsController;					$txtExamMonthYear = $ContinuousAssessmentExam->getExamMonthYear($this->request->data['monthYears']);					$headerLogo = "<table border='0' align='center' cellpadding='0' cellspacing='0' style='font:14px Arial;'>									<tr>									<td><img src='../webroot/img/user.jpg'></td>										<td align='center'>SATHYABAMA UNIVERSITY<br/>										<span class='slogan'></span></td>									</tr>									</table>";												if(isset($results)) {							$pnum='';							$j=1;							$pageSeq=0; $pageNumber=0;							for($p=0;$p<count($studentsArray);$p++) {								$student_id = $studentsArray[$p]['Student']['id']; //echo "** ".$student_id;								if($student_id){									if($j==1 || $pageSeq == 25){										$pageSeq=0; $pageNumber++;										if($j!=1){											$pnum = $pageNumber-1;											$html .= "</table>													<table border='0' cellpadding='0' cellspacing='0' style='width:100%;													border-collapse:collapse;border-bottom:0;'>										<tr><td colspan='4' align='right'><b>Page No. ".$pnum."</div></b></td></tr></table>";											$html .= "<div style='page-break-after:always'></div>";										}																	$html .= $headerLogo;										$html .= "<table border='1' cellpadding='0' cellspacing='0' style='width:100%;border-collapse:collapse;border-bottom:0;'>										<tr><td colspan='4' align='center'><b>CAE ".$seqCAE."</b></td></tr>										<tr>											<td style='height:20px;'><b>&nbsp;Batch</b></td>											<td>&nbsp;".$batch_period."</td>											<td><b>&nbsp;Program</b></td>											<td>&nbsp;".$program_details['academic_name']."</td>										</tr>										<tr>											<td style='height:20px;'><b>&nbsp;Month&Year of Exam</b></td>											<td>&nbsp;".$full_monthyear."</td>											<td><b>&nbsp;Specialisation</b></td>											<td>&nbsp;".$program_details['name']."</td>										</tr>										</table><table border='1' cellpadding='0' cellspacing='0' style='width:100%;font:12px airal;border-collapse:collapse;border-color:#cccccc;'>";										$html .="<tr>												<th style='height:30px;'> Sl.&nbsp;No.</th>												<th> Reg.No.</th>												<th style='width:250px;'> Student&nbsp;Name</th>";												foreach ($getAllCaeId as $cm_id => $caeArray) {													$html .="<th>".$caeArray['course_code']."</th>";												}										$html .="<th> SIGNATURE</th></tr>";									}								$pageSeq++;								//pr($getAllCaeId);								$html .="<tr>								<td style='height:24px;text-align:center;'>".$j."</td>								<td style='text-align:center;'>".$studentsArray[$p]['Student']['registration_number']."</td>								<td style='text-indent:5px;'>&nbsp;".$studentsArray[$p]['Student']['name']."</td>";									foreach ($getAllCaeId as $cm_id => $caeArray) {										if (isset($markArray[$student_id]) && isset($markArray[$student_id][$cm_id]) ) {											$html .="<th>".$markArray[$student_id][$cm_id]."</th>";										}										else {											$html .="<td style='text-align:center;'>NA</td>";										}									}								$html .="<td style='width:200px;'></td></tr>";$j++;								}								//echo $html;							}						} 						$pnum++;					$html.="</table>							<table border='0' cellpadding='0' cellspacing='0' style='width:100%;													border-collapse:collapse;border-bottom:0;'>										<tr><td colspan='4' align='right'><b>Page No. ".$pnum."</div></b></td></tr></table>";					$this->layout=false;					$this->autoRender=false;					$this->mPDF->init();					$this->mPDF->setFilename($batch_period."_".$program_details['short_code']."_".$full_monthyear."_Theory_CAE_".$seqCAE."_MARK_PRINT_".date('d_M_Y').'.pdf');					$this->mPDF->setOutput('D');					$this->mPDF->AddPage('L','', '', '', '',10,10,5,5,18,12);					$this->mPDF->setFooter($footerFoilCard);					$this->mPDF->WriteHTML($html);					$this->mPDF->SetWatermarkText("Draft");				}				if ($this->data['submit']=="excel") {					//echo "excel";					//pr($results);									for($p=0;$p<count($studentsArray);$p++) {						$student_id = $studentsArray[$p]['Student']['id']; //echo "** ".$student_id;													$row = 1; // 1-based index						$col = 0;						$phpExcel = new PHPExcel();						$phpExcel->setActiveSheetIndex(0);						$sheet = $phpExcel->getActiveSheet();						$sheet->getRowDimension('1')->setRowHeight('18');						$sheet->setTitle("CAE_Mark");						//$sheet->setCellValueByColumnAndRow($col, $row, "SL.No.");$col++;						$sheet->setCellValueByColumnAndRow($col, $row, "REGISTER NUMBER");$col++;						$sheet->setCellValueByColumnAndRow($col, $row, "STUDENT NAME");$col++;						foreach ($getAllCaeId as $cm_id => $caeArray) {							$sheet->setCellValueByColumnAndRow($col, $row, $caeArray['course_code']);$col++;						}					}										$row = 2;					for($p=0;$p<count($studentsArray);$p++) {						$student_id = $studentsArray[$p]['Student']['id']; //echo "** ".$student_id;						$col = 0;																			$sheet->getRowDimension($row)->setRowHeight('18');													$sheet->setCellValueByColumnAndRow($col, $row, $studentsArray[$p]['Student']['registration_number']);$col++;						$sheet->setCellValueByColumnAndRow($col, $row, $studentsArray[$p]['Student']['name']);$col++;						foreach ($getAllCaeId as $cm_id => $caeArray) {							if (isset($markArray[$student_id]) && isset($markArray[$student_id][$cm_id]) ) {								$sheet->setCellValueByColumnAndRow($col, $row, $markArray[$student_id][$cm_id]);$col++;							}							else {								$sheet->setCellValueByColumnAndRow($col, $row, "NA");$col++;							}						}						$row++;					}					$filename = $full_monthyear."_CAE_".$seqCAE."_".$batch_period."_".$program_details['academic_name']."_".$program_details['name'];					$download_filename=$filename."_".date('d-M-Y h:i:s');					header("Content-Type: application/vnd.ms-excel");					header("Content-Disposition: attachment; filename=\"$download_filename.xls\"");					header("Cache-Control: max-age=0");					$objWriter = PHPExcel_IOFactory::createWriter($phpExcel, "Excel5");					$objWriter->save("php://output");					exit;				}			}		}		$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));		$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));		$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));		$monthyears = $this->MonthYear->getAllMonthYears();		$this->set(compact('academics','programs','batches','monthyears'));		$results = $this->Attendance->find('all');			$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}		public function batchwiseCae($course_type, $type) {		if($this->request->is('post')) {			//pr($this->data);			$this->cae($course_type, $type);		}		$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));		$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));		$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));		$monthyears = $this->MonthYear->getAllMonthYears();		$this->set(compact('academics','programs','batches','monthyears'));		$results = $this->Attendance->find('all');			$this->set('attendances', $results);	}		public function cae($course_type, $type) {		$ContinuousAssessmentExamsController = new ContinuousAssessmentExamsController;		$courseType = $this->listCourseTypeIdsBasedOnMethod($course_type, "-");				$courseTypeIdArray = explode("-",$courseType);		//pr($courseTypeIdArray);					$month_year_id = $this->request->data['monthYears'];		$batch_id = $this->request->data['Mark']['batch_id'];		$program_id = 0;		$seqCAE = $this->request->data['Mark']['CAE'];				$cmaCond = array();		$cmaCond['CourseMapping.batch_id'] = $batch_id;		$cmaCond['CourseMapping.indicator'] = 0;		$cmaCond['CourseMapping.month_year_id <='] = $month_year_id;					if ($program_id!='-' || $program_id!=0) $cmaCond['CourseMapping.program_id'] = $program_id;				$course_mapping_array = $this->CourseMapping->find('list', array(				'conditions'=>array( $cmaCond )		));				$courseMappingArray = $this->theoryCourseMappingArray($batch_id, $courseTypeIdArray, $program_id, $month_year_id, $course_mapping_array);		//echo count($courseMappingArray);		//pr($courseMappingArray);					$CourseList = "";				$studentsArray = $this->Student->getStudentsWithBatchAndProgram($batch_id, $program_id, $month_year_id);		//echo count($studentsArray);		//pr($studentsArray);					SWITCH ($course_type) {			case "theory":				$model = "Cae";				$internal_model = "ContinuousAssessmentExam";				$internal_field = "cae_id";				break;			case "practical":			case "studio":				$model = "CaePractical";				$internal_model = "InternalPractical";				$internal_field = "cae_practical_id";				break;			case "project":				$model = "CaeProject";				$internal_model = "ProjectReview";				$internal_field = "cae_project_id";				break;		}		$courseMappingDetails = $this->CourseMapping->find('all', array(				'conditions' => array(						'CourseMapping.id' => array_keys($courseMappingArray),						'CourseMapping.month_year_id' => $month_year_id,				),				'contain'=>array(						$model=>array(								'conditions'=>array("$model".".indicator"=>0, "$model".".month_year_id"=>$month_year_id),								'fields'=>array("$model".".course_mapping_id","$model".".marks","$model".".assessment_type",										"$model".".marks_status", "$model".".approval_status","$model".".lecturer_id",										"$model".".add_status","$model".".id"								)						),						'Course'=>array(								'fields'=>array('Course.id', 'Course.course_name', 'Course.course_type_id', 'Course.course_code', 'Course.common_code')						)				),		));					//echo $seqCAE;		//pr($courseMappingDetails);		$getAllCaeId = array();$getAllCMId = array();		foreach ($courseMappingDetails as $key => $courseMapping) {			if (isset($courseMapping[$model])) {				$caeArray = $courseMapping[$model];				$i=1;				foreach ($caeArray as $key => $cae) {					if ($course_type == "theory" || $course_type == "project") {						if($seqCAE == $i){							$getAllCaeId[$courseMapping['CourseMapping']['id']] = array(									'cae_id' => $cae['id'],									'course_code' => $courseMapping['Course']['course_code'],									'course_name' => $courseMapping['Course']['course_name']							);						}					}					else {						$getAllCaeId[$courseMapping['CourseMapping']['id']] = array(								'cae_id' => $cae['id'],								'course_code' => $courseMapping['Course']['course_code'],								'course_name' => $courseMapping['Course']['course_name']						);					}					$i++;				}			}		}		//pr($getAllCaeId);		$batch_period = $this->Batch->getBatch($batch_id);		//$program_details = $this->Program->getProgram($program_id);		$full_monthyear = $this->MonthYear->getMonthYear($month_year_id);				if($getAllCaeId){			$markArray = array();			foreach($getAllCaeId as $cm_id => $cae_details) {				//pr($cae_details);				$results = $this->CourseStudentMapping->find('all', array(						'conditions' => array(								'CourseStudentMapping.indicator'=>0, 'CourseStudentMapping.course_mapping_id '=>$cm_id						),						'fields' => array('CourseStudentMapping.student_id'),						'group'=>'CourseStudentMapping.student_id ASC',						'contain' => array(								'Student' => array(										'conditions' => array('Student.discontinued_status'=>0),										'fields'=>array('Student.id', 'Student.name', 'Student.batch_id', 'Student.program_id'),										$internal_model => array(												'conditions' => array("$internal_model"."."."$internal_field" => $cae_details['cae_id']),												'fields'=>array("$internal_model".".".'marks'),										)								)						),				));				//pr($results);				foreach ($results as $key => $caeMarkArray) {					if (isset($caeMarkArray['Student'][$internal_model][0]['marks'])) {						$markArray[$caeMarkArray['Student']['batch_id']][$caeMarkArray['Student']['program_id']][$caeMarkArray['Student']['id']][$cae_details['course_code']] =						array(								'course_name'=>$cae_details['course_name'],								'marks' => $caeMarkArray['Student'][$internal_model][0]['marks']															);					}					/* else {					 $markArray[$caeMarkArray['CourseStudentMapping']['student_id']][$cm_id] = 'NA';					 } */				}				//pr($markArray);			}			//pr($markArray);			$batch_period = $this->Batch->getBatch($batch_id);					if ($type=="markdata") {				$phpExcel = new PHPExcel();				$phpExcel->setActiveSheetIndex(0);				$sheet = $phpExcel->getActiveSheet();				$sheet->getRowDimension('1')->setRowHeight('18');				$sheet->setTitle("CAE");							$sheet->setCellValue("A1", "BATCH");				$sheet->setCellValue("B1", "PROGRAM");				$sheet->setCellValue("C1", "REG_NUMBER");				$sheet->setCellValue("D1", "NAME");				$col=4; $i=1;				for ($j=0; $j<10; $j++) {					$sheet->setCellValueByColumnAndRow($col, $i, "COURSE_CODE");$col++;					$sheet->setCellValueByColumnAndRow($col, $i, "COURSE_NAME");$col++;					$sheet->setCellValueByColumnAndRow($col, $i, "MARKS");$col++;				}							$i=2;				foreach ($markArray as $batch_id => $pgmArray) {					foreach ($pgmArray as $program_id => $studentArray) {						foreach ($studentArray as $student_id => $courseArray) {							$program_details = $this->Program->getProgram($program_id);							$sheet->getRowDimension($i)->setRowHeight('18');							$sheet->setCellValue('A'.$i, $this->Batch->getBatch($batch_id));							$sheet->setCellValue('B'.$i, $program_details['name']);							$student_details = $this->Student->studentDetails($student_id);							$sheet->setCellValue('C'.$i, $student_details[0]['Student']['registration_number']);							$sheet->setCellValue('D'.$i, $student_details[0]['Student']['name']);							$col = 4;							foreach ($courseArray as $course_code => $cArray) {								$sheet->setCellValueByColumnAndRow($col, $i, $course_code);$col++;								$sheet->setCellValueByColumnAndRow($col, $i, $cArray['course_name']);$col++;								$sheet->setCellValueByColumnAndRow($col, $i, $cArray['marks']);$col++;							}							$i++;						}					}				}							$download_filename="CAE_Mark_Data_".$this->Batch->getBatch($batch_id)."_CAE_".$seqCAE."_".date('d_M_Y h:i:s');				header("Content-Type: application/vnd.ms-excel");				header("Content-Disposition: attachment; filename=\"$download_filename.xls\"");				header("Cache-Control: max-age=0");				$objWriter = PHPExcel_IOFactory::createWriter($phpExcel, "Excel5");				$objWriter->save("php://output");				exit;			}			else if ($type=="website") {				$phpExcel = new PHPExcel();				$phpExcel->setActiveSheetIndex(0);				$sheet = $phpExcel->getActiveSheet();				$sheet->getRowDimension('1')->setRowHeight('18');				$sheet->setTitle("CAE");									$sheet->setCellValue("A1", "BATCH");				$sheet->setCellValue("B1", "PROGRAM");				$sheet->setCellValue("C1", "REG_NUMBER");				$sheet->setCellValue("D1", "NAME");				$sheet->setCellValue('E1', "COURSE_CODE");				$sheet->setCellValue('F1', "COURSE_NAME");				$sheet->setCellValue('G1', "MARKS");									$i=2;				//pr($markArray); 				foreach ($markArray as $batch_id => $pgmArray) {					foreach ($pgmArray as $program_id => $studentArray) {						foreach ($studentArray as $student_id => $courseArray) {							foreach ($courseArray as $course_code => $cArray) {								//echo $student_id."</br>";								$program_details = $this->Program->getProgram($program_id);								$sheet->getRowDimension($i)->setRowHeight('18');								$sheet->setCellValue('A'.$i, $this->Batch->getBatch($batch_id));								$sheet->setCellValue('B'.$i, $program_details['name']);								$student_details = $this->Student->studentDetails($student_id);								$sheet->setCellValue('C'.$i, $student_details[0]['Student']['registration_number']);								$sheet->setCellValue('D'.$i, $student_details[0]['Student']['name']);																$sheet->setCellValue('E'.$i, $course_code);								$sheet->setCellValue('F'.$i, $cArray['course_name']);								$sheet->setCellValue('G'.$i, $cArray['marks']);								$i++;							}													}					}				}									$download_filename="CAE_To_Website_".$this->Batch->getBatch($batch_id)."_CAE_".$seqCAE."_".date('d_M_Y h:i:s');				header("Content-Type: application/vnd.ms-excel");				header("Content-Disposition: attachment; filename=\"$download_filename.xls\"");				header("Cache-Control: max-age=0");				$objWriter = PHPExcel_IOFactory::createWriter($phpExcel, "Excel5");				$objWriter->save("php://output");				exit;			}		}		}		public function practical_attendance_foil_cards() {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {			$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));			$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));			$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));			$monthyears = $this->MonthYear->getAllMonthYears();			$this->set(compact('academics','programs','batches','monthyears'));			$results = $this->Attendance->find('all');						$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}		public function project_attendance_foil_cards() {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {			$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));			$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));			$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));			$monthyears = $this->MonthYear->getAllMonthYears();			$this->set(compact('academics','programs','batches','monthyears'));			$results = $this->Attendance->find('all');						$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}		public function pt_attendance_foil_cards() {		$access_result = $this->checkPathAccess($this->Auth->user('id'));		if (!$access_result) {			$academics = $this->Program->Academic->find('list',array('order' => array('Academic.academic_name ASC')));			$programs = $this->Program->find('list',array('order' => array('Program.program_name ASC')));			$batches = $this->Batch->find('list', array('fields' => array('Batch.batch_period'),'order' => array('Batch.batch_to DESC')));			$monthyears = $this->MonthYear->getAllMonthYears();			$this->set(compact('academics','programs','batches','monthyears'));			$results = $this->Attendance->find('all');					$this->set('attendances', $results);		} else {			$this->render('../Users/access_denied');		}	}}